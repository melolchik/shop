package com.melolchik.shopapp.dao;

import org.greenrobot.greendao.annotation.*;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
import com.melolchik.common.util.AppLogger;

import org.greenrobot.greendao.annotation.*;
import org.greenrobot.greendao.query.QueryBuilder;

import java.util.Collections;
import java.util.List;
// KEEP INCLUDES END

/**
 * Entity mapped to table "COUNTRY".
 */
@Entity
public class Country {

    @Id
    @Unique
    private long countryId;

    @NotNull
    private String countryName;

    // KEEP FIELDS - put your custom fields here
    public static final long COUNTRY_ID_ALL  = -1;
    // KEEP FIELDS END

    @Generated
    public Country() {
    }

    public Country(long countryId) {
        this.countryId = countryId;
    }

    @Generated
    public Country(long countryId, String countryName) {
        this.countryId = countryId;
        this.countryName = countryName;
    }

    public long getCountryId() {
        return countryId;
    }

    public void setCountryId(long countryId) {
        this.countryId = countryId;
    }

    @NotNull
    public String getCountryName() {
        return countryName;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setCountryName(@NotNull String countryName) {
        this.countryName = countryName;
    }

    // KEEP METHODS - put your custom methods here

    public void insertOrReplace() {
        //log("insert " + this);
        ShopDatabase database = new ShopDatabase(true);

        try {
            DaoSession daoSession = database.getDaoSession();
            CountryDao dao = daoSession.getCountryDao();
            dao.insertOrReplaceInTx(this);
            daoSession.clear();
        } catch (Exception e) {
            e.printStackTrace();
            log("insert ex = " + e.getMessage());
        } finally {
            database.release();
        }
    }

    public static List<Country> getList() {
        List<Country> list = null;
        ShopDatabase database = new ShopDatabase(false);
        try {
            DaoSession daoSession = database.getDaoSession();
            CountryDao dao = daoSession.getCountryDao();
            QueryBuilder<Country> queryBuilder = dao.queryBuilder().orderAsc(CountryDao.Properties.CountryName);
            list = queryBuilder.list();
            daoSession.clear();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            database.release();
        }

        return list != null ? list : Collections.<Country>emptyList();
    }

    @Override
    public String toString() {
        return new StringBuilder()
        .append(getCountryId()).append(": ")
        .append(getCountryName()).toString();
    }

    protected static void log(String message) {
        AppLogger.log(Country.class.getCanonicalName() + " " + message);
    }
    // KEEP METHODS END

}
